'use strict';
'use strict';

var EtcManager = require('./etcManager');
var Rpc = require('./rpc');
var ActorManager = require('./actorManager');
var Logger = require('cosmos-logger');
var logger = Logger.getLogger('cosmos');
var appConfig = require('./configDefault');

var ProjectLoader = require('./projectLoader');

var CosmosActor = function CosmosActor(appConfig, actorConfig) {

	this.isStarted = false;
	this.appConfig = appConfig;
	this.actorConfig = actorConfig;

	this.actorMgr = new ActorManager(this.actorConfig);

	this.etc = new EtcManager(this.appConfig.etcConfig, this.actorMgr);

	this.rpc = new Rpc(this.etc, this.actorMgr);
};

CosmosActor.prototype.start = function () {
	var $this = this;
	return $this.etc.init().then(function () {
		return $this.actorMgr.init();
	}).then(function () {
		return $this.rpc.init();
	}).then(function () {
		logger.info('=== CosmosActor finish started! ===');
		$this.isStarted = true;
	});
};

// CosmosActor.prototype.getApp = function () {
// 	return this.app;
// };

var _instance = null;

module.exports = {
	CosmosActor: CosmosActor,


	// TODO: 移到cosmos
	// getApp: function getApp() {
	// 	// use project loader  convenience load project structure folder!
	// 	if (_instance == null) {
	// 		var projectLoader = new ProjectLoader(process.cwd()); // TODO: pass app.js  dir path;
	// 		_instance = new Cosmos(projectLoader.appConfig, projectLoader.actorConfig);
	// 		_instance.start();
	// 	}
	// 	return _instance.getApp();
	// },

	getLogger: Logger.getLogger
};